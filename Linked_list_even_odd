/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head) return head ; // this means if(head == NULL) .......
      ListNode*odd = head , *evenhead = head -> next , *even = evenhead ;
      while(even && even -> next){  // while(even != NULL && even -> next != NULL)
        odd -> next = odd -> next -> next ;
        even -> next = even -> next -> next ;
        odd = odd -> next ;
        even = even -> next ;
      } 
      odd -> next = evenhead ; // this has change the odd to the odd and has store even to the head using evenbite 
      return head ;
    }
};
